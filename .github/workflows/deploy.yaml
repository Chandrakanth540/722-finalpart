# GitHub Actions workflow.
#
# Automatically deploys the Node.js microservice to Kubernetes on push to the main branch. 
# For real use, you might want to restrict this to the "prod" branch.
#

name: Deploy microservice

on:
  #
  # Deploys the microservice on push to the main branch of this code repository.
  #
  push: 
    branches:
      - main

  #
  # Allows deployment to be invoked manually through the GitHub Actions user interface.
  #
  workflow_dispatch: 

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build with Docker Compose
        run: |
          docker-compose -f docker-compose.yml build
        env:
          VERSION: ${{ secrets.VERSION }}
          CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
          REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
          REGISTRY_PW: ${{ secrets.REGISTRY_PW }}

  deploy:
    runs-on: ubuntu-latest
    
    env:
      VERSION: ${{ github.sha }}
      CONTAINER_REGISTRY: ${{ secrets.CONTAINER_REGISTRY }}
      REGISTRY_UN: ${{ secrets.REGISTRY_UN }}
      REGISTRY_PW: ${{ secrets.REGISTRY_PW }}

    steps:
      # Checks out your repository under $GITHUB_WORKSPACE.
      - uses: actions/checkout@v3

      #
      # Makes the build-image script executable.
      #
      - name: Make build-image script executable
        run: chmod +x ./scripts/build-image.sh

      #
      # Converts line endings if necessary.
      #
      - name: Convert line endings (if necessary)
        run: dos2unix ./scripts/build-image.sh || sed -i 's/\r$//' ./scripts/build-image.sh
        
      #
      # Builds the Docker image.
      #
      - name: Build Docker Image
        run: ./scripts/build-image.sh

      #
      # Publishes the Docker image to the container registry.
      #
      - name: Publish Docker Image
        run: ./scripts/push-image.sh

      #
      # Installs Kubectl and connects it to the cluster.
      #
      - uses: tale/kubectl-action@v1
        with:
          base64-kube-config: ${{ secrets.KUBE_CONFIG }}
          kubectl-version: v1.24.2
      
      #
      # Expands the configuration template and deploys the microservice.
      #
      - name: Deploy to Kubernetes
        run: ./scripts/deploy.sh
